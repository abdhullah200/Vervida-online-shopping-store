@{
    ViewData["Title"] = "Home";
}

<div class="container py-5 text-center">
    <h1 class="display-4 neon">Welcome</h1>
    <p class="lead">Explore the demo product store.</p>

    <div id="three-root" style="width:100%;max-width:720px;margin:2rem auto; height:420px;">
        <!-- Three.js canvas is created dynamically -->
    </div>
</div>

@section Scripts {
    <script>
        (function() {
            // Basic three.js rotating cube - works with three.js loaded in layout
            try {
                const container = document.getElementById('three-root');
                const scene = new THREE.Scene();
                const camera = new THREE.PerspectiveCamera(45, container.clientWidth / container.clientHeight, 0.1, 1000);
                const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });
                renderer.setSize(container.clientWidth, container.clientHeight);
                container.appendChild(renderer.domElement);

                const geometry = new THREE.BoxGeometry(2, 2, 2);
                const material = new THREE.MeshStandardMaterial({ color: 0x00f5ff, roughness: 0.4, metalness: 0.6 });
                const cube = new THREE.Mesh(geometry, material);
                scene.add(cube);

                const light = new THREE.DirectionalLight(0xffffff, 1);
                light.position.set(5, 10, 7.5);
                scene.add(light);

                camera.position.z = 6;

                function animate() {
                    requestAnimationFrame(animate);
                    cube.rotation.x += 0.01;
                    cube.rotation.y += 0.013;
                    renderer.render(scene, camera);
                }
                animate();

                // Resize handling
                new ResizeObserver(() => {
                    const w = container.clientWidth;
                    const h = container.clientHeight;
                    renderer.setSize(w, h);
                    camera.aspect = w / h;
                    camera.updateProjectionMatrix();
                }).observe(container);
            } catch (e) {
                console.warn('three.js not available or failed to init', e);
            }
        })();
    </script>
}
